html {
  box-sizing: border-box;
}
*,
*::after,
*::before {
  box-sizing: inherit;
}

body {
  margin: 0;
}

.container {
  background-color: #333;
  height: 400px;
  width: 100%;
  display: flex; /*inline-flex: Se comporta como caja en linea*/
  flex-direction: row-reverse; /*|row|column|row-reverse|column-reverse|*/
  flex-wrap: nowrap; /*default mantener a todos los elementos en una sola linea*/
  flex-wrap: wrap-reverse; /*|nowrap|wrap|wrap-reverse|*/
  flex-flow: row nowrap; /*shorcut flex-flow: (flex-direction flex-wrap)*/
  justify-content: flex-start; /*|flex-start|center|flex-end|space-between|space-around|space-evenly(eje x)*/
  align-items: stretch; /*|strech|flex-start|flex-end|center|baseline|* (eje y)*/
  align-content: space-evenly; /* Define la alineación de los hijos en el eje transversal (cross axis), NO funciona cuando los hijos están en UNA sóla línea (es decir cuando flex-wrap tiene el valor de nowrap, NO FUNCIONA) */
  /* flex-start | flex-end | center | space-between | space-around | space-evenly | stretch */
}

.item {
  border: medium solid #999;
  /* width: 20%;
  height: 20%; */
  background-color: #666;
  flex-grow: 0;
  /* Cuando la caja flexbox tenga espacio sobrante se reparte dependiendo de las proporciones que se tenga, es la habilidad o el factor de crecer, valor por defecto es 0, NO se aceptan valores negativos */
  flex-shrink: 1;
  /* Cuando la caja flexbox NO tenga espacio sobrante, es la habilidad o el factor de encogerse, valor por defecto es 1, NO se aceptan valores negativos */
  flex-basis: auto; /*depende de si es una fila o columna*/
  flex-basis: 100px; /*flex-basis tiene mayor especificidad que la propiedad width*/
  /* width: 200px; */
  /* Es el tamaño del elemento hijo dentro de la línea de la caja flexbox
        Si la caja flexbox tiene dirección de fila, flex-basis representa el width
        Si la caja flexbox tiene dirección de columna, flex-basis representa el height
        Valor por defecto auto */
  /*flex: 0 1 auto;flex(shorthand): grow shrink basis*/
  order: 0;
  /* Representa el orden que tendrán los elementos hijos en la caja flexbox
        Valor por defecto 0
        Se aceptan valores positivos y negativos
        Un valor menor siempre irá antes que un valor mayor */

  align-self: stretch;
  /* stretch | flex-start | flex-end | center | baseline */
  /* Sobreescribe el valor de la propiedad align-items sólo para el elemento hijo especificado */
}

/*flex-shrink: 2

236.67 - 200 = 36.67
36.67/4 = 9.1675

1. 78.89 - 9.1675 = 69.72
2. 78.89 - 2*9.1675 = 60.55 
*/

.item:nth-child(2) {
  flex-grow: 0;
  flex-shrink: 2;
  order: 1;
  align-self: center; 
}
/* .item:nth-child(2),
.item:nth-child(17) {
  font-size: 250%;
} */
